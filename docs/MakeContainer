check spot2_container and update the FE/BE branch to point to the latest.


set a UMASK before we start.
umask 0002
that modifies in the current shell.


When doing deploy: do CZ first.  Test.  Then do RZ.
Need to remove old github, contact Matt if permission issues.
do deploy at 1pm



Clean up: Delete dot files: check github to see the dot files and delete them.
.sasscache
.idea



Clean up the interface between spotBE and spotFE.




DONE - Deploy latest to CZ Dev: clone new repo there.  Smoke Test.
- Do full regression test for deploy.

Issues with Ale3d:
    1) last layer doesn't appear -> non-issue because same thing happens on live for ALL other data sets.
    2) why doesn't it break it apart by title "/g/g0/pascal/zdeb/ale3d_all" -> because there are only 4 different titles: /usr/gapps/spot/sand/spot.py getData ~/zdeb/ale3d_all '{}' | grep 'title'

    3) Pipe Gen - https://rzlc.llnl.gov/spot/dcvis/?sf=/usr/workspace/spotdev/martymcf/ale3d/perf/2021-01-13/performance_profiles/spot2&aggregate=sum&groupby=problem%20name&problem_name=pipe-gen
            * the first pipe gen graph does not show up.
            * perhaps this is because the values are all 0.
- Caching is an issue -> everytime want to start clean, need to create a new dir and copy files.



DONE - 2) Move over changes -> the 2 Ale3D fixes
DONE - Ale3D data set -> Marty Spot1 files: https://rzlc.llnl.gov/spot/dcvis/?sf=/usr/workspace/spotdev/martymcf/ale3d/spot1-files
- why is it graphing 55 for all the values?  instead of all the different values
    * subset datasets https://rzlc.llnl.gov/lorenz_base/dev/pascal/spotfe/?xaxis=launchdate&sf=/g/g0/pascal/tes4&groupby=dataSetKey&aggregate=sum
    * https://rzlc.llnl.gov/lorenz_base/dev/pascal/spotfe/?sf=/g/g0/pascal/tes6
    * https://rzlc.llnl.gov/spot/#/charts/%2Fusr%2Fworkspace%2Fspotdev%2Fmartymcf%2Fale3d%2Fspot1-files
    * at the 4th layers something is still not right:
    "generator/build ghost elem/exchange and finalize/breakdown ghost elements": {
                    "yAxis": 0.0
                },
    *

DONE - Redeploy RZ Dev with new BE clone ->
DONE - Create subsets of the Ale3D dataset, with just 4 files in it.
DONE - sort the checkboxes at the top of the page of the spot2 dashboard.
    * although sorting is done, need to regression test and see if it didn't break anything
    * because it was commented out, means that it was probably breaking something.
DONE - EtcBucket limit to 200.



https://rzlc.llnl.gov/spot/dcvis/?sf=/usr/workspace/spotdev/martymcf/ale3d/spot1-files&groupby=title&aggregate=sum
/usr/gapps/spot/dev/spot.py getData /usr/gapps/spot/datasets/test_marty '{}' | more
    * resolve 0 issues.
/Users/aschwanden1/spot_my_changes.py

- recheck everything out into new clone and then integrate spot_my_changes
    * make sure we don't overwite existing changes.

DONE - Container -> got walltime working
DONE - Container -> got timeseries working -> had to implement ajax call in a way that worked for the container.
DONE - fixed Environment issues - fix the environemnt.js
DONE - /demos/mem - this does not work for some reason, need to find out why
DONE - Container: MultiJupyter on container -> if URL string too long from too many selections, causes hanging without error message
    * Lowered the limit on the number of characters, which should mitigate the issue.
    * but not sure where the character limit in the docker server is coming from.


- Need to reclone the whole repo and copy changes to it.



- fix walltime for container that jsonP call need ot use the URL host

DONE - currently it's trying to use: lc.llnl.gov which is not right, it should use the current host. (dont hard code localhost)

- app.js only add "/data/" if it's not present in that string that's given
    * don't want people to be able to supply ../etc/
    * realpath -> changes it into actual location
    * translate realpath into an absolute location
    * add /data/ if not exists.
- I'll need to test both spotfe/spotbe in both Container and Noncontainer
    * don't worry about which user is testing.
    * Matt will test charliecloud.

- consider moving to prod mode for Vue.
- possibly look into websocket error
    * who knows if its important or not.

Debuging the python command line:
    from pprint import pprint
    pprint(subpaths)

        except:
            error_me = sys.exc_info()
            pprint(error_me)
            print("Next entry.")
            print()



SPOTPW=see  docker run -e SPOTPW -v /Users/aschwanden1/datasets/:/data -p 8080:8080/tcp -p 8888:8888/tcp --name spot2_d32 spot2

docker build -t spot2 --build-arg DEFAULT_SPOTPW=see .

~/install/spot2_container/spotfe/compare-src: npm run watch-walltime

# do this if you need to change any source code files.  if source files change need to rm and rebuild and rerun.
docker rm spot2_debug6

docker build -t spot2 .
docker run -v /Users/aschwanden1/datasets/:/data -p 8080:8080/tcp -p 8888:8888/tcp --name spot2_debug17 spot2

docker exec -it spot2_debug17 /bin/bash

The above will start a debugging session where you or on the docker image:
(base) root@bbe7b70e2409:/usr/gapps/spot# ls /data/lul_sept_28_timeseries/
200924-16330964138.cali  200924-16420956733.cali  200924-16475759479.cali
200924-16383266200.cali  200924-16435357269.cali  200924-17012261057.cali
200924-16394856104.cali  200924-16444657823.cali  200924-17025362173.cali
200924-16401756144.cali  200924-16454258362.cali
200924-16410956192.cali  200924-16465458917.cali

Then you can see all the cali files in your /data/lul_sept_28_timeseries dir:

Works:
http://localhost:8080/?sf=lul_sept_28_timeseries

In Input field only need to enter: lul_sept_28_timeseries

Put data in here: /install/spot2_container/spotbe/demos

From Legendre:
I’ve updated Joe’s SPOT container and added instructions in the README.md for how to build and run it.  It mostly works, but I’m hitting a couple issues:

Task:
The walltime page is broken.  It tries to access lc.llnl.gov.
Instead it should access the containers Node.js backend.
You can see examples of the backend in the container’s app.js code.
Can you look into making the FE go through app.js when in the container?
If I push too many files to multijupyter it just hangs rather than giving an error message.


 Spot2 ready to go with the exception of the container errors you mentioned.

Container is the only blocker that I know of.

In order to resolve the container issue, I first have to get it working.
I’m working on 2 fronts:
Try to get docker working OR
Try to get Charliecloud working


Unfortunately, I’m running into issues with both of these right now:
Installing Charliecloud – getting a fatal error because autoreconf is not installed.  I need to install this on mac OS X.  Also getting an error when installing autoconf:
Enter PIN for 'Certificate For PIV Authentication (aschwanden1)':


Docker: I’m getting a build error on this command: docker build -t spot2 .
#14 0.470 CMake Error: The source directory "/usr/gapps/spot/Caliper" does not appear to contain CMakeLists.txt.

Once i checked out the submodules this error message went away:
git submodule update --init --recursive




Container:
- https://lc.llnl.gov/bitbucket/projects/SPOT2/repos/spot2_container/browse
- https://github.com/hpc/charliecloud
- https://hpc.github.io/charliecloud/

Left off trying to install charliecloud
* i tried to install:
aschwanden1@doc ~/Downloads/charliecloud-master: ./autogen.sh
but there was a problem with
+ autoreconf --force --install -Wall -Werror
./autogen.sh: line 56: autoreconf: command not found

- need to find out how to install autoreconf and try to reinstall it.
After that install charliecloud.
- then after that follow the directions for the spot2_container: https://lc.llnl.gov/bitbucket/projects/SPOT2/repos/spot2_container/browse





Ok, so I was able to change the URL such that It calls from http://localhost:8080 in the container for the failing jsonP callback.  But, it’s now calling lora.cgi/jsonp.

So, I’m going to use the app.js file to specify a new endpoint that will call backend.py, just like the /getData call in app.js.

There’s a memory call which returns all the info needed for the front end, (the call for noncontainer is:

/usr/gapps/spot/venv_python/bin/python3 /usr/gapps/spot/dev/spot.py memory lul_sept_28_timeseries/200924-16410956192.cali

